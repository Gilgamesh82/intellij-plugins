interface <lineMarker descr="Has implementations">FirstInterface</lineMarker> {
  function <lineMarker descr="Is implemented">firstInterfaceMethod</lineMarker>(x);
}

interface <lineMarker descr="Has implementations">SecondInterface</lineMarker> extends FirstInterface {
  function <lineMarker descr="Is implemented">secondInterfaceMethod</lineMarker>();
}

interface <lineMarker descr="Has implementations">ThirdInterface</lineMarker> extends SecondInterface {
  function <lineMarker descr="Is implemented">thirdInterfaceMethod</lineMarker>();
}

class <lineMarker descr="Has subclasses">FirstClass</lineMarker> implements SecondInterface {
  public function <lineMarker descr="Implements method 'firstInterfaceMethod' in FirstInterface">firstInterfaceMethod</lineMarker>(x) {}
  public function <lineMarker descr="Is overridden"><lineMarker descr="Implements method 'secondInterfaceMethod' in SecondInterface">s<caret>econdInterfaceMethod</lineMarker></lineMarker>() {}
}

class <lineMarker descr="Has subclasses">SecondClass</lineMarker> extends FirstClass {
}

class <lineMarker descr="Has subclasses">ThirdClass</lineMarker> extends SecondClass implements ThirdInterface {
  public override function <lineMarker descr="Overrides method 'secondInterfaceMethod' in FirstClass"><lineMarker descr="Is overridden">secondInterfaceMethod</lineMarker></lineMarker>() {}
  public function <lineMarker descr="Implements method 'thirdInterfaceMethod' in ThirdInterface">thirdInterfaceMethod</lineMarker>() {}
}

class FourthClass extends ThirdClass {
  public override function <lineMarker descr="Overrides method 'secondInterfaceMethod' in ThirdClass">secondInterfaceMethod</lineMarker>() {}
}
