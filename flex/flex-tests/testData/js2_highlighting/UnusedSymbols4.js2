package {
public class <symbolName descr="classes//class name">UnusedSymbols4</symbolName>
{
  var <symbolName descr="instance field">x</symbolName>:<symbolName descr="classes//class name">Bar</symbolName>;
  var <symbolName descr="instance field">y</symbolName>:<symbolName descr="classes//class name">Object</symbolName> = new <symbolName descr="classes//class name">Foo2</symbolName>();
}
}

class <symbolName descr="classes//class name">Bar</symbolName> {}
class <warning descr="Unused inner class Foo"><symbolName descr="classes//class name">Foo</symbolName></warning> {
}

class <symbolName descr="classes//class name">Foo2</symbolName> {
    function <symbolName descr="classes//class name">Foo2</symbolName>() {}
}

class <symbolName descr="classes//class name">Base</symbolName> {
    public function <symbolName descr="instance method">foo</symbolName>(<info descr="Unused parameter s"><symbolName descr="identifiers//parameter">s</symbolName></info>:<symbolName descr="classes//class name">String</symbolName>, <info descr="Unused parameter n"><symbolName descr="identifiers//parameter">n</symbolName></info>:int):void {}
}

class <symbolName descr="classes//class name">Derived</symbolName> extends <symbolName descr="classes//class name">Base</symbolName> {
    public override function <symbolName descr="instance method">foo</symbolName>(<symbolName descr="identifiers//parameter">s</symbolName>:<symbolName descr="classes//class name">String</symbolName>, <symbolName descr="identifiers//parameter">n</symbolName>:int):void {
        var <symbolName descr="identifiers//local variable">x</symbolName>:<symbolName descr="classes//class name">Derived</symbolName> = new <symbolName descr="classes//class name">Derived</symbolName>();
        <symbolName descr="identifiers//local variable">x</symbolName> = null;
        <symbolName descr="identifiers//parameter">n</symbolName> = -1;
    }
}